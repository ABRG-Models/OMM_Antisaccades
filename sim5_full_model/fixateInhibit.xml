<?xml version="1.0"?>
<SpineML xsi:schemaLocation="http://www.shef.ac.uk/SpineMLComponentLayer SpineMLComponentLayer.xsd" xmlns="http://www.shef.ac.uk/SpineMLComponentLayer" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <ComponentClass type="neuron_body" name="fixateInhibit">
  <Dynamics initial_regime="New_Regime_1">
   <Regime name="New_Regime_1">
    <OnEvent target_regime="New_Regime_1" src_port="saccade">
     <StateAssignment variable="saccadeOn">
      <MathInline>50</MathInline>
     </StateAssignment>
    </OnEvent>
    <OnCondition target_regime="New_Regime_1">
     <StateAssignment variable="Out">
      <MathInline>noisyOut</MathInline>
     </StateAssignment>
     <Trigger>
      <MathInline>t >= timeOn &amp;&amp; t &lt; timeOff &amp;&amp; saccadeOn == 0</MathInline>
     </Trigger>
    </OnCondition>
    <OnCondition target_regime="New_Regime_1">
     <StateAssignment variable="Out">
      <MathInline>postStimOut</MathInline>
     </StateAssignment>
     <Trigger>
      <MathInline>t >= timeOff &amp;&amp; saccadeOn == 0</MathInline>
     </Trigger>
    </OnCondition>
    <OnCondition target_regime="New_Regime_1">
     <StateAssignment variable="saccadeOn">
      <MathInline>saccadeOn - 1</MathInline>
     </StateAssignment>
     <StateAssignment variable="Out">
      <MathInline>0</MathInline>
     </StateAssignment>
     <Trigger>
      <MathInline>saccadeOn > 0</MathInline>
     </Trigger>
    </OnCondition>
   </Regime>
   <Alias dimension="?" name="noisyOut">
    <MathInline>outVal + ( noiseVal * randomNormal )</MathInline>
   </Alias>
   <StateVariable dimension="?" name="Out"/>
   <StateVariable dimension="?" name="saccadeOn"/>
  </Dynamics>
  <AnalogSendPort name="Out"/>
  <EventReceivePort name="saccade"/>
  <Parameter dimension="ms" name="timeOn"/>
  <Parameter dimension="ms" name="timeOff"/>
  <Parameter dimension="?" name="outVal"/>
  <Parameter dimension="?" name="noiseVal"/>
  <Parameter dimension="?" name="postStimOut"/>
 </ComponentClass>
</SpineML>
